///! Describes air in gas form.
///!
///! # Resources
///! Data taken from https://refractiveindex.info/?shelf=other&book=air&page=Borzsonyi on 2021-02-21.
///! Sellmeier data taken from the paper [Linear refractive index and absorption measurements of nonlinear optical liquids in the visible and near-infrared spectral region](https://d-nb.info/102770462X/34) on 2021-02-21.

/// Computes the refractive index of **air** according to the Sellmeier equation.
///
/// # Performance
/// Benchmarked to be the fastest algorithm to compute the refractive index for a specific wavelength.
///
/// # Constraints
/// * `lambda` - Should be finite (neither infinite nor `NaN`).
///
/// # Arguments
/// * `lambda` - The wavelength in **Âµm**
///
/// # Returns
/// * The refractive index
#[inline(always)]
pub fn sellmeier_n(lambda: f32) -> f32 {
    debug_assert!(lambda.is_finite());

    let l2 = lambda * lambda;
    let one = 0.75831 * l2 / (l2 - 0.01007);
    let two = 0.08495 * l2 / (l2 - 8.91377);

    f32::sqrt(1.0 + one + two)
}

pub static INDEX: [f32; 101] = {
    [
        400.0, 406.0, 412.0, 418.0, 424.0, 430.0, 436.0, 442.0, 448.0, 454.0, 460.0, 466.0, 472.0,
        478.0, 484.0, 490.0, 496.0, 502.0, 508.0, 514.0, 520.0, 526.0, 532.0, 538.0, 544.0, 550.0,
        556.0, 562.0, 568.0, 574.0, 580.0, 586.0, 592.0, 598.0, 604.0, 610.0, 616.0, 622.0, 628.0,
        634.0, 640.0, 646.0, 652.0, 658.0, 664.0, 670.0, 676.0, 682.0, 688.0, 694.0, 700.0, 706.0,
        712.0, 718.0, 724.0, 730.0, 736.0, 742.0, 748.0, 754.0, 760.0, 766.0, 772.0, 778.0, 784.0,
        790.0, 796.0, 802.0, 808.0, 814.0, 820.0, 826.0, 832.0, 838.0, 844.0, 850.0, 856.0, 862.0,
        868.0, 874.0, 880.0, 886.0, 892.0, 898.0, 904.0, 910.0, 916.0, 922.0, 928.0, 934.0, 940.0,
        946.0, 952.0, 958.0, 964.0, 970.0, 976.0, 982.0, 988.0, 994.0, 1000.0,
    ]
};
pub static N: [f32; 101] = {
    [
        1.000293822,
        1.000293508,
        1.00029321,
        1.000292925,
        1.000292652,
        1.000292392,
        1.000292142,
        1.000291904,
        1.000291675,
        1.000291456,
        1.000291246,
        1.000291044,
        1.00029085,
        1.000290664,
        1.000290485,
        1.000290313,
        1.000290147,
        1.000289988,
        1.000289834,
        1.000289686,
        1.000289543,
        1.000289405,
        1.000289272,
        1.000289144,
        1.00028902,
        1.0002889,
        1.000288784,
        1.000288672,
        1.000288563,
        1.000288458,
        1.000288357,
        1.000288258,
        1.000288163,
        1.00028807,
        1.000287981,
        1.000287894,
        1.00028781,
        1.000287728,
        1.000287648,
        1.000287571,
        1.000287496,
        1.000287424,
        1.000287353,
        1.000287284,
        1.000287217,
        1.000287152,
        1.000287089,
        1.000287027,
        1.000286967,
        1.000286909,
        1.000286852,
        1.000286797,
        1.000286743,
        1.00028669,
        1.000286639,
        1.000286589,
        1.00028654,
        1.000286493,
        1.000286446,
        1.000286401,
        1.000286357,
        1.000286314,
        1.000286272,
        1.000286231,
        1.000286191,
        1.000286151,
        1.000286113,
        1.000286076,
        1.000286039,
        1.000286003,
        1.000285968,
        1.000285934,
        1.000285901,
        1.000285868,
        1.000285836,
        1.000285804,
        1.000285774,
        1.000285744,
        1.000285714,
        1.000285685,
        1.000285657,
        1.00028563,
        1.000285603,
        1.000285576,
        1.00028555,
        1.000285525,
        1.0002855,
        1.000285475,
        1.000285451,
        1.000285428,
        1.000285405,
        1.000285382,
        1.00028536,
        1.000285338,
        1.000285317,
        1.000285296,
        1.000285275,
        1.000285255,
        1.000285235,
        1.000285216,
        1.000285196,
    ]
};
